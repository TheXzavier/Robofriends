{"version":3,"sources":["reportWebVitals.js","components/Cards.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Cards","name","email","id","className","alt","src","cardArray","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","height","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","class","data-text","CardList","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCSCQ,EAdD,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAKC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC5B,OACA,sBAAKC,UAAU,sDAAf,UACA,8BACC,qBAAKC,IAAM,SAASC,IAAG,+BAA0BH,EAA1B,qBAExB,gCACC,6BAAKF,IACL,4BAAIC,WCaUK,EApBG,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACpB,OACA,8BAGOA,EAAOC,KAAI,SAACC,EAAKC,GAEZ,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHVS,SCIJC,EAdG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACpB,OACG,8BACC,uBACAT,UAAY,8CACZU,KAAK,SACLC,YAAc,oBACdC,SAAUH,OCDCI,G,YAPA,SAACC,GAChB,OACA,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAS,SAA1C,SACCH,EAAMI,aCwDQC,E,kDApDd,aAAc,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAf1C,EAAKC,MAAQ,CACRtB,OAAS,GACTmB,YAAc,IAJT,E,qDAQb,WAAoB,IAAD,OACfI,MAAM,8CACLrC,MAAK,SAAAsC,GAAQ,OAAIA,EAASC,UAC1BvC,MAAK,SAAAwC,GAAK,OAAI,EAAKR,SAAS,CAAClB,OAAO0B,S,oBAStC,WAAU,IAAD,EACqBC,KAAKL,MAA5BtB,EADE,EACFA,OAAQmB,EADN,EACMA,YAETS,EAAiB5B,EAAO6B,QAAO,SAAAC,GAC7B,OAAOA,EAAMrC,KAAKsC,cAAcC,SAASb,EAAYY,kBAE7D,OAAQ/B,EAAOiC,OAOjB,gCACA,8BACA,sBAAKC,MAAM,YAAX,UACA,qBAAKA,MAAM,UAAUC,YAAU,cAA/B,yBACA,qBAAKD,MAAM,QAAX,8BAKA,sBAAKvC,GAAK,QAAQC,UAAY,MAA9B,UACE,cAAC,EAAD,CAAWS,aAAesB,KAAKX,iBAC/B,cAAC,EAAD,UACA,cAACoB,EAAD,CAAUpC,OAAQ4B,YAlBd,8BACA,qBAAKM,MAAM,SAAX,8B,GA7BUG,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACA,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1B3D,M","file":"static/js/main.aacef677.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Cards = ({name,email, id}) => {\r\nreturn (\r\n<div className='tc bg-light-green dib br3 pa3 grow bw2 shadow-5 ma3'>\r\n<div>\r\n <img alt = 'robots' src={`https://robohash.org/${id}?size=200x200`}/>\r\n</div>\r\n<div>\r\n <h2>{name}</h2>\r\n <p>{email}</p>\r\n</div>\r\n</div>\r\n);\r\n\r\n}\r\nexport default Cards;\r\n\r\n","import React from 'react';\r\nimport Cards from './Cards';\r\n\r\nconst cardArray = ({robots}) => {\r\nreturn (\r\n<div>\r\n    {\r\n    \r\n       robots.map((user,i) => \r\n        {\r\n            return (\r\n            <Cards\r\n            key = {i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email} \r\n            />\r\n            );\r\n        })\r\n    }\r\n</div>\r\n);\r\n}\r\nexport default cardArray;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\nreturn ( \r\n   <div>\r\n    <input \r\n    className = 'pa3 ba b--green bg-lightest-blue ma2 br3 tc'\r\n    type='search' \r\n    placeholder = 'Enter robots here'\r\n    onChange={searchChange}\r\n\r\n     />\r\n    </div>\r\n);\r\n\r\n}\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nconst Scroll = (props) => {\r\nreturn (\r\n<div style={{overflow: 'scroll', height : '500px'}}>\r\n{props.children}\r\n</div>\r\n)\r\n}\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.scss';\r\nimport '../components/Loading.css';\r\nimport Scroll from '../components/Scroll.js';\r\n\r\nclass App extends Component {\r\n constructor(){\r\n    super(); \r\n    this.state = {\r\n         robots : [],\r\n         searchField : ''\r\n     }\r\n }\r\n\r\n componentDidMount(){\r\n     fetch('https://jsonplaceholder.typicode.com/users')\r\n     .then(response => response.json())\r\n     .then(users => this.setState({robots:users}));\r\n\r\n }\r\n\r\n \r\nonSearchChange = (event) => {\r\n    this.setState({searchField : event.target.value}) \r\n    }\r\n    \r\n    render() {\r\n    const {robots, searchField} = this.state;\r\n\r\n    const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n           });\r\n    return !robots.length ?\r\n        <div>\r\n        <div class=\"loader\">Loading...</div>\r\n        </div>\r\n        :\r\n        (\r\n\r\n  <div> \r\n  <div>\r\n  <div class=\"container\">\r\n  <div class=\"glitch \" data-text=\"ROBOFRIENDS\">ROBOFRIENDS</div>\r\n  <div class=\"glow \">ROBOFRIENDS</div>\r\n  </div>\r\n  </div>\r\n  \r\n  \r\n  <div id = 'dunno' className = 'tc '>\r\n    <SearchBox searchChange= {this.onSearchChange}/>\r\n    <Scroll>\r\n    <CardList robots={filteredRobots}/>\r\n    </Scroll>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div> \n    <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}